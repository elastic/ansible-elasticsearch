---
- name: RedHat - install {{ versionlock_plugin_package }}
  become: yes
  package:
    name: "{{ versionlock_plugin_package }}"
    state: present
    update_cache: yes

- name: RedHat - check if requested elasticsearch version lock exists
  become: yes
  shell: '{{ package_manager }} versionlock list | grep {{ es_package_name }} | grep -c "{{ es_version }}"'
  register: es_requested_version_locked
  args:
    warn: false
  failed_when: False
  changed_when: False
  check_mode: False

- name: RedHat - lock elasticsearch version
  become: yes
  command: '"{{ package_manager }}" versionlock delete 0:elasticsearch* ; "{{ package_manager }}" versionlock add {{ es_package_name }}-{{ es_version }}'
  args:
    warn: false
  when:
    - es_version_lock
    - es_requested_version_locked is defined
    - es_requested_version_locked.stdout|int == 0

- name: RedHat - check if any elasticsearch version lock exists
  become: yes
  shell: '"{{ package_manager }}" versionlock list | grep -c elasticsearch'
  register: es_version_locked
  args:
    warn: false
  failed_when: False
  changed_when: False
  check_mode: False

- name: RedHat - unlock elasticsearch version
  become: yes
  shell: '"{{ package_manager }}" versionlock delete 0:elasticsearch*'
  args:
    warn: false
  when:
    - not es_version_lock
    - es_version_locked is defined
    - es_version_locked.stdout|int > 0
